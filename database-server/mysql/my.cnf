# https://github.com/deoren/postfix-examples
#
# The MySQL/MariaDB database server configuration file.
#
# You can copy this to one of:
# - "/etc/mysql/my.cnf" to set global options,
# - "~/.my.cnf" to set user-specific options.
#
# One can use all long options that the program supports.
# Run program with --help to get a list of available options and with
# --print-defaults to see which it would actually understand and use.
#
# For explanations see:
#
# https://mariadb.com/kb/en/mariadb/full-list-of-mariadb-options-system-and-status-variables/
# http://dev.mysql.com/doc/mysql/en/server-system-variables.html

# This will be passed to all mysql clients
# It has been reported that passwords should be enclosed with ticks/quotes
# escpecially if they contain "#" chars...
# Remember to edit /etc/mysql/debian.cnf when changing the socket location.
[client]
port                    = 3306
socket                  = /var/run/mysqld/mysqld.sock

# Here is entries for some specific programs
# The following values assume you have at least 32M ram

# This was formally known as [safe_mysqld]. Both versions are currently parsed.
[mysqld_safe]
socket                  = /var/run/mysqld/mysqld.sock
nice                    = 0

[mysqld]
#
# * Basic Settings
#
user                    = mysql
pid-file                = /var/run/mysqld/mysqld.pid
socket                  = /var/run/mysqld/mysqld.sock
port                    = 3306
basedir                 = /usr
datadir                 = /var/lib/mysql
tmpdir                  = /tmp
lc-messages-dir         = /usr/share/mysql
skip-external-locking
#
# Instead of skip-networking the default is now to listen only on
# localhost which is more compatible and is not less secure.

# MySQL Server supports binding to 0, 1 or ALL IPs. You must use a host-level
# firewall to prevent remote connections on local IPs that you don't intend to
# offer connections on. In our case we're listening on all interfaces because
# we're relying on UFW rules to limit access
#
#
bind-address            = 0.0.0.0


# Skip reverse DNS lookup of clients
skip-name-resolve


# Maximum client connections
#
# Note: Directly related to the 'open-files-limit' settings.
#
# The maximum permitted number of simultaneous client connections. By default,
# this is 151. See Section B.5.2.7, "Too many connections", for more information.
# Increasing this value increases the number of file descriptors that mysqld
# requires. See Section 8.4.3.1, "How MySQL Opens and Closes Tables", for
# comments on file descriptor limits. mysqld actually permits
# max_connections+1 clients to connect. The extra connection is reserved for
# use by accounts that have the SUPER privilege. By granting the SUPER
# privilege to administrators and not to normal users (who should not need
# it), an administrator can connect to the server and use SHOW PROCESSLIST
# to diagnose problems even if the maximum number of unprivileged clients are
# connected. See Section 13.7.5.30, "SHOW PROCESSLIST Syntax".
#
# The maximum number of connections MySQL supports depends on the quality of
# the thread library on a given platform, the amount of RAM available, how
# much RAM is used for each connection, the workload from each connection,
# and the desired response time. Linux or Solaris should be able to support
# at least 500 to 1000 simultaneous connections routinely and as many as
# 10,000 connections if you have many gigabytes of RAM available and the
# workload from each is low or the response time target undemanding. Windows
# is limited to (open tables Ã— 2 + open connections) < 2048 due to the Posix
# compatibility layer used on that platform.
#
# Increasing open-files-limit may be necessary. Also see Section 2.5,
# "Installing MySQL on Linux", for how to raise the operating system limit
# on how many handles can be used by MySQL.
#
# https://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_max_connections
# https://dev.mysql.com/doc/refman/5.5/en/too-many-connections.html
# https://dev.mysql.com/doc/refman/5.5/en/server-options.html#option_mysqld_open-files-limit
#
#
# Default: 151


#
# * Fine Tuning
#
# https://mariadb.com/kb/en/mariadb/myisam-system-variables/#key_buffer_size
# http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_key_buffer_size
#  Default: 8388608 (8M)
key_buffer_size         = 16M

# http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_max_allowed_packet
# https://mariadb.com/kb/en/mariadb/server-system-variables/#max_allowed_packet
# Default: 1048576 (1M)
max_allowed_packet      = 16M

# https://mariadb.com/kb/en/mariadb/server-system-variables/#thread_stack
# http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_thread_stack
# Default: 262144 (256K) - MySQL 5.5.x
# Default: 294912 (288K) - MariaDB 10.x
thread_stack            = 192K

thread_cache_size       = 8
# This replaces the startup script and checks MyISAM tables if needed
# the first time they are touched
myisam-recover          = BACKUP

# https://mariadb.com/kb/en/mariadb/handling-too-many-connections/
# https://mariadb.com/kb/en/server-system-variables/#max_connections
# Default: 151
max_connections         = 151

# https://mariadb.com/kb/en/mariadb/where-is-the-table_cache-in-mariadb/
# http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_table_open_cache
# https://mariadb.com/kb/en/mariadb/server-system-variables/#table_open_cache
table_open_cache        = 400

#thread_concurrency      = 10
#
# * Query Cache Configuration
#
query_cache_limit       = 1M
query_cache_size        = 16M
#
# * Logging and Replication
#
# Both location gets rotated by the cronjob.
# Be aware that this log type is a performance killer.
# As of 5.1 you can enable the log at runtime!
#general_log_file         = /var/log/mysql/mysql.log
#general_log              = 1
#
# Error log - should be very few entries.
#
# NOTE: We let the errors go to syslog instead where rsyslog routes them
#
#log_error = /var/log/mysql/error.log

# Enable logging of failed login attempts
#
# http://www.mysqlperformanceblog.com/2012/12/28/auditing-login-attempts-in-mysql/
log_warnings            = 2

#
# Here you can see queries with especially long duration
#log_slow_queries        = /var/log/mysql/mysql-slow.log
#long_query_time         = 2
#log-queries-not-using-indexes
#
# The following can be used as easy to replay backup logs or for replication.
# note: if you are setting up a replication slave, see README.Debian about
#       other settings you may need to change.
#server-id               = 1
#log_bin                 = /var/log/mysql/mysql-bin.log
expire_logs_days        = 10
max_binlog_size         = 100M
#binlog_do_db            = include_database_name
#binlog_ignore_db        = include_database_name
#
# * InnoDB
#
# InnoDB is enabled by default with a 10MB datafile in /var/lib/mysql/.
# Read the manual for more InnoDB related options. There are many!
#
# * Security Features
#
# Read the manual, too, if you want chroot!
# chroot                 = /var/lib/mysql/
#
# For generating SSL certificates I recommend the OpenSSL GUI "tinyca".
#
# ssl-ca                 = /etc/mysql/cacert.pem
# ssl-cert               = /etc/mysql/server-cert.pem
# ssl-key                = /etc/mysql/server-key.pem



[mysqldump]
quick
quote-names
max_allowed_packet      = 16M

[mysql]
#no-auto-rehash # faster start of mysql but no tab completition

[isamchk]
key_buffer              = 16M

#
# * IMPORTANT: Additional settings that can override those from this file!
#   The files must end with '.cnf', otherwise they'll be ignored.
#
!includedir /etc/mysql/conf.d/
